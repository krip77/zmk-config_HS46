/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include "keymap_KP_swe.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define SWE_L    6
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <16 19>;
        };

        backspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <20 15>;
        };

        swe {
            bindings = <&tog 5>;
            key-positions = <41 42>;
        };

        LEFTSHIFT {
            bindings = <&kp BACKSPACE>;
            key-positions = <43 19>;
        };

        sapexecute {
            bindings = <&kp F8>;
            key-positions = <43 23>;
        };

        sapbak {
            bindings = <&kp F3>;
            key-positions = <43 22>;
        };

        PekEnter {
            bindings = <&kp ENTER>;
            key-positions = <19 20>;
        };

        RingBackspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <20 21>;
        };

        apostrof {
            bindings = <&kp BACKSLASH>;
            key-positions = <6 7>;
        };

        skriv_aa {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <11 23>;
        };

        search {
            bindings = <&kp LA(SPACE)>;
            key-positions = <34 35>;
        };

        oo {
            bindings = <&kp SEMI>;
            key-positions = <7 19>;
        };

        aoo {
            bindings = <&kp SQT>;
            key-positions = <8 20>;
        };

        ao {
            bindings = <&kp LBKT>;
            key-positions = <9 21>;
        };

        LikaMed {
            bindings = <&kp LS(N0)>;
            key-positions = <7 8>;
        };

        minus {
            bindings = <&kp SLASH>;
            key-positions = <18 19>;
        };

        plus {
            bindings = <&kp MINUS>;
            key-positions = <33 32>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
        };

        punkt: punkt {
            compatible = "zmk,behavior-tap-dance";
            label = "PUNKT";
            #binding-cells = <0>;
            bindings = <&kp J>, <&punktSpace>;

            tapping-term-ms = <250>;
        };

        komma: komma {
            compatible = "zmk,behavior-tap-dance";
            label = "KOMMA";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kommaspace>;

            tapping-term-ms = <300>;
        };

        ao: ao {
            compatible = "zmk,behavior-tap-dance";
            label = "AO";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp LBKT>;

            tapping-term-ms = <200>;
        };

        TD2_paste: TD2_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_PASTE";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp LC(V)>;

            tapping-term-ms = <300>;
        };

        TD2_copy: TD2_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_COPY";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LC(C)>;

            tapping-term-ms = <300>;
        };

        TD2_1F1: TD2_1F1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_1F1";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1>, <&kp F1>;

            tapping-term-ms = <200>;
        };

        TD2_2F2: TD2_2F2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_2F2";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2>, <&kp F2>;

            tapping-term-ms = <200>;
        };

        TD2_3F3: TD2_3F3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_3F3";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_3>, <&kp F3>;

            tapping-term-ms = <200>;
        };

        TD2_4F4: TD2_4F4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_4F4";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4>, <&kp F4>;

            tapping-term-ms = <200>;
        };

        TD2_5F5: TD2_5F5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_5F5";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_5>, <&kp F5>;

            tapping-term-ms = <200>;
        };

        TD2_6F6: TD2_6F6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_6F6";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_6>, <&kp F6>;

            tapping-term-ms = <200>;
        };

        TD2_7F7: TD2_7F7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_7F7";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_7>, <&kp F7>;

            tapping-term-ms = <200>;
        };

        TD2_8F8: TD2_8F8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_8F8";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_8>, <&kp F8>;

            tapping-term-ms = <200>;
        };

        TD2_9F9: TD2_9F9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_9F9";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_9>, <&kp F9>;

            tapping-term-ms = <200>;
        };

        TD2_10F10: TD2_10F10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2_10F10";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0>, <&kp F10>;

            tapping-term-ms = <200>;
        };

        undo: undo {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDO";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp LC(Z)>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&macro_press>;

            label = "COPY";
        };

        punktSpace: punktSpace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PERIOD &kp SPACE>;
            label = "PUNKTSPACE";
        };

        kommaspace: kommaspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "KOMMASPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E        &kp R             &kp T                                                         &TD2_copy         &TD2_paste        &undo               &kp O       &kp P      &kp LBKT
&kp TAB       &kp A  &kp S  &hm LSHFT D  &hm LEFT_SHIFT F  &kp G                                                         &kp H             &hm LEFT_SHIFT J  &hm LEFT_CONTROL K  &hm RALT L  &kp SEMI   &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C        &kp V             &kp B      &kp CAPSLOCK                      &kp PRINTSCREEN  &kp N             &kp M             &kp COMMA           &kp PERIOD  &kp SLASH  &kp DELETE
                                         &kp LGUI          &kp LSHFT  &lt 2 BACKSPACE  &mo 3    &tog 4  &lt 1 SPACE      &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };

        /* 	default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 *
*
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R     &kp T                                                        &kp Y     &kp U      &kp I      &kp O    &kp P      &kp BACKSPACE
&kp TAB     &kp A  &kp S  &kp D  &kp F     &kp G                                                        &kp H     &kp J      &kp K      &kp L    &kp SEMI   &kp ENTER
&kp LCTRL   &kp Z  &kp X  &kp C  &kp V     &kp B      &caps_word                       &kp PRINTSCREEN  &kp N     &kp M      &kp COMMA  &kp DOT  &kp SLASH  &kp DELETE
                                 &kp LGUI  &kp LSHFT  &lt 4 BACKSPACE  &mo 5    &mo 6  &lt 3 SPACE      &kp LALT  &kp LCTRL
            >;

        }; */

        nav_layer {
            /* NAV   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |   0   | BSPC  |
 * | Cut   |  GUI  |  Alt  | Ctrl  | Shift | Paste |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  |  F1   |  F2   |  F3   |  F4   |  F5   |  UnDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */

            bindings = <
&kp Copy  &TD2_1F1  &TD2_2F2  &TD2_3F3   &TD2_4F4   &TD2_5F5                                                  &TD2_6F6          &TD2_7F7       &TD2_8F8  &TD2_9F9         &TD2_10F10  &kp N0
&kp Cut   &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp EXCL                                                  &kp LS(MINUS)     &kp LEFT       &kp UP    &kp RIGHT_ARROW  &trans      &kp SQT
&trans    &kp F1    &kp F2    &kp F3     &kp F4     &kp F5     &kp Undo                          &trans       &kp END           &kp PAGE_UP    &kp DOWN  &kp PG_DN        &kp F10     &kp RCTRL
                                         &kp LGUI   &kp LSHFT  &lt 2 BACKSPACE  &trans    &mo 3  &lt 1 SPACE  &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * |       |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| HOME  | Shift | Ctrl  | Alt   | Gui   | END   |
 * | Ctrl  |   |   |   _   |   +   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |       | Ctrl  |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */

            bindings = <
&kp INS       &kp RA(NUMBER_2)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)        &kp RA(N5)         &kp LS(N5)                                                    &kp LS(NUMBER_6)  &kp LS(N7)     &kp LS(N8)  &kp LS(N9)  &kp C_PLAY_PAUSE  &kp C_NEXT
&kp LS(PLUS)  &kp BSLH          &kp MINUS         &hm LCTRL LS(NUMBER_0)  &hm LSHIFT LS(N8)  &kp BACKSLASH                                                 &kp SLASH         &kp PIPE       &kp RA(N8)  &kp RA(N9)  &kp C_VOL_DN      &kp C_VOLUME_UP
&trans        &kp RA(N7)        &kp UNDER         &kp PLUS                &kp RA(N8)         &kp PIPE       &sk RALT                          &kp K_APP    &kp LS(SLASH)     &kp C_VOL_DN   &kp COMMA   &kp PERIOD  &kp C_PREV        &kp C_NEXT
                                                                          &kp LGUI           &kp LSHFT      &lt 2 BACKSPACE  &mo 3    &trans  &lt 1 SPACE  &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |  F11  |  F12  |Prt Scr|EP_OFF | EP_ON |
 * | RESET | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       | RESET |
 * |       | LGUI  | LALT  | LCTRL | LSHIFT|       |BT CLR |-------------------|       |       |       |OUT_USB|OUT_BLE|       | BOOTL |
 *                                 |       |       |       |       |---|       |       |       |       |
 */

            bindings = <
&none        &to 0         &to 0         &to 0         &none         &none                                                         &none             &kp F11        &kp F12       &kp PRINTSCREEN  &ext_power EP_OFF  &ext_power EP_ON
&sys_reset   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                                  &none             &none          &none         &none            &none              &sys_reset
&bootloader  &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT    &none         &bt BT_CLR                         &none        &none             &none          &out OUT_USB  &out OUT_BLE     &none              &bootloader
                                                       &kp LGUI      &kp LSHFT     &lt 2 BACKSPACE  &trans    &trans  &lt 1 SPACE  &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };

        NumPad {
            bindings = <
&trans   &trans  &kp F1  &kp F2   &kp F3    &kp F4                                                     &kp MINUS         &kp N7         &kp N8  &kp N9  &kp LS(N7)    &kp LS(N0)
&kp TAB  &trans  &kp F5  &kp F6   &kp F7    &kp F8                                                     &kp SLASH         &kp N4         &kp N5  &kp N6  &kp LS(NUHS)  &kp PERIOD
&trans   &trans  &kp F9  &kp F10  &kp F11   &kp F12    &trans                             &trans       &kp N0            &kp N1         &kp N2  &kp N3  &kp RET       &kp COMMA
                                  &kp LGUI  &kp LSHFT  &lt 2 BACKSPACE  &kp N0    &trans  &lt 1 SPACE  &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };

        swedish_layer {
            /* SWE
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R     &kp T                                                    &kp Y             &kp U          &kp I      &kp O    &kp P      &kp LEFT_BRACKET
&kp TAB     &kp A  &kp S  &kp D  &kp F     &kp G                                                    &kp H             &kp J          &kp K      &kp L    &kp SEMI   &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C  &kp V     &kp B      &kp PRINTSCREEN                  &caps_word   &kp N             &kp M          &kp COMMA  &kp DOT  &kp SLASH  &kp DELETE
                                 &kp LGUI  &kp LSHFT  &lt 2 BACKSPACE  &mo 3    &mo 4  &lt 1 SPACE  &kp LEFT_CONTROL  &kp RIGHT_ALT
            >;
        };
    };
};
